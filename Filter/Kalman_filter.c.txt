//-------------------------------------------------------
//Kalman滤波，8MHz的处理时间约1.8ms；
//-------------------------------------------------------
static float angle, angle_dot; 		//外部需要引用的变量
//-------------------------------------------------------
static const float Q_angle=0.001, Q_gyro=0.003, R_angle=0.5, dt=0.01;
			//注意：dt的取值为kalman滤波器采样时间;
static float P[2][2] = {
							{ 1, 0 },
							{ 0, 1 }
						};
	
static float Pdot[4] ={0,0,0,0};

static const char C_0 = 1;

static float q_bias, angle_err, PCt_0, PCt_1, E, K_0, K_1, t_0, t_1;
//-------------------------------------------------------
void Kalman_Filter(float angle_m,float gyro_m)	
{
	angle+=(gyro_m-q_bias) * dt;
 
	
	Pdot[0]=Q_angle - P[0][1] - P[1][0]; 
	Pdot[1]=- P[1][1];
	Pdot[2]=- P[1][1];
	Pdot[3]=Q_gyro;
	
	P[0][0] += Pdot[0] * dt;
	P[0][1] += Pdot[1] * dt;
	P[1][0] += Pdot[2] * dt;
	P[1][1] += Pdot[3] * dt;
	
	
	angle_err = angle_m - angle;
	
	PCt_0 = C_0 * P[0][0]; //P(K-1|K-2) 
  	PCt_1 = C_0 * P[1][0];//P(K|K-1)
	
	E = R_angle + C_0 * PCt_0; //
	
	K_0 = PCt_0 / E; //
	K_1 = PCt_1 / E;//
	
	t_0 = PCt_0; //
	t_1 = C_0 * P[0][1];

	P[0][0] -= K_0 * t_0; //
	P[0][1] -= K_0 * t_1;//
	P[1][0] -= K_1 * t_0;//
	P[1][1] -= K_1 * t_1;//
	
	//
	angle	+= K_0 * angle_err;
	q_bias	+= K_1 * angle_err;
	angle_dot = gyro_m-q_bias;
}
//*/